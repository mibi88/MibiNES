#!/bin/python3

# mibines - A small NES emulator.
# by Mibi88
#
# This software is licensed under the BSD-3-Clause license:
#
# Copyright 2025 Mibi88
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

names = [
    # 0x00 to 0x1F
    "BRK",
    "ORA",
    "STP",
    "SLO",
    "NOP",
    "ORA",
    "ASL",
    "SLO",
    "PHP",
    "ORA",
    "ASL",
    "ANC",
    "NOP",
    "ORA",
    "ASL",
    "SLO",
    "BPL",
    "ORA",
    "STP",
    "SLO",
    "NOP",
    "ORA",
    "ASL",
    "SLO",
    "CLC",
    "ORA",
    "NOP",
    "SLO",
    "NOP",
    "ORA",
    "ASL",
    "SLO",
    # 0x20 to 0x3F
    "JSR",
    "AND",
    "STP",
    "RLA",
    "BIT",
    "AND",
    "ROL",
    "RLA",
    "PLP",
    "AND",
    "ROL",
    "ANC",
    "BIT",
    "AND",
    "ROL",
    "RLA",
    "BMI",
    "AND",
    "STP",
    "RLA",
    "NOP",
    "AND",
    "ROL",
    "RLA",
    "SEC",
    "AND",
    "NOP",
    "RLA",
    "NOP",
    "AND",
    "ROL",
    "RLA",
    # 0x40 to 0x5F
    "RTI",
    "EOR",
    "STP",
    "SRE",
    "NOP",
    "EOR",
    "LSR",
    "SRE",
    "PHA",
    "EOR",
    "LSR",
    "ALR",
    "JMP",
    "EOR",
    "LSR",
    "SRE",
    "BVC",
    "EOR",
    "STP",
    "SRE",
    "NOP",
    "EOR",
    "LSR",
    "SRE",
    "CLI",
    "EOR",
    "NOP",
    "SRE",
    "NOP",
    "EOR",
    "LSR",
    "SRE",
    # 0x60 to 0x7F
    "RTS",
    "ADC",
    "STP",
    "RRA",
    "NOP",
    "ADC",
    "ROR",
    "RRA",
    "PLA",
    "ADC",
    "ROR",
    "ARR",
    "JMP",
    "ADC",
    "ROR",
    "RRA",
    "BVS",
    "ADC",
    "STP",
    "RRA",
    "NOP",
    "ADC",
    "ROR",
    "RRA",
    "SEI",
    "ADC",
    "NOP",
    "RRA",
    "NOP",
    "ADC",
    "ROR",
    "RRA",
    # 0x80 to 9F
    "NOP",
    "STA",
    "NOP",
    "SAX",
    "STY",
    "STA",
    "STX",
    "SAX",
    "DEY",
    "NOP",
    "TXA",
    "XAA",
    "STY",
    "STA",
    "STX",
    "SAX",
    "BCC",
    "STA",
    "STP",
    "AHX",
    "STY",
    "STA",
    "STX",
    "SAX",
    "TYA",
    "STA",
    "TXS",
    "TAS",
    "SHY",
    "STA",
    "SHX",
    "AHX",
    # 0xA0 to 0xBF
    "LDY",
    "LDA",
    "LDX",
    "LAX",
    "LDY",
    "LDA",
    "LDX",
    "LAX",
    "TAY",
    "LDA",
    "TAX",
    "LAX",
    "LDY",
    "LDA",
    "LDX",
    "LAX",
    "BCS",
    "LDA",
    "STP",
    "LAX",
    "LDY",
    "LDA",
    "LDX",
    "LAX",
    "CLV",
    "LDA",
    "TSX",
    "LAS",
    "LDY",
    "LDA",
    "LDX",
    "LAX",
    # C0 to DF
    "CPY",
    "CMP",
    "NOP",
    "DCP",
    "CPY",
    "CMP",
    "DEC",
    "DCP",
    "INY",
    "CMP",
    "DEX",
    "AXS",
    "CPY",
    "CMP",
    "DEC",
    "DCP",
    "BNE",
    "CMP",
    "STP",
    "DCP",
    "NOP",
    "CMP",
    "DEC",
    "DCP",
    "CLD",
    "CMP",
    "NOP",
    "DCP",
    "NOP",
    "CMP",
    "DEC",
    "DCP",
    # E0 to FF
    "CPX",
    "SBC",
    "NOP",
    "ISC",
    "CPX",
    "SBC",
    "INC",
    "ISC",
    "INX",
    "SBC",
    "NOP",
    "SBC",
    "CPX",
    "SBC",
    "INC",
    "ISC",
    "BEQ",
    "SBC",
    "STP",
    "ISC",
    "NOP",
    "SBC",
    "INC",
    "ISC",
    "SED",
    "SBC",
    "NOP",
    "ISC",
    "NOP",
    "SBC",
    "INC",
    "ISC"
];

print("HEX  ", end = "")
for x in range(8):
    if x == 7: print(f" {x:01x}/{x+8:01x}", end = "")
    else: print(f" {x:01x}/{x+8:01x}", end = "  ")
print()
for y in range(32):
    print(f"0x{y*8:02x} ", end = "")
    for x in range(8):
        if x == 7: print(" " + names[y*8+x], end = "")
        else: print(" " + names[y*8+x], end = "  ")
    print()
